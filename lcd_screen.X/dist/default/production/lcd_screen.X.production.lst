

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed May 18 21:11:36 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           	psect	idataCOMRAM
    18  000754                     __pidataCOMRAM:
    19                           	opt stack 0
    20                           
    21                           ;initializer for _String1
    22  000754  0601               	dw	STR_1& (0+65535)
    23                           
    24                           ;initializer for _String2
    25  000756  060F               	dw	STR_2& (0+65535)
    26  0000                     _ADCON1	set	4033
    27  0000                     _LATAbits	set	3977
    28  0000                     _LATB	set	3978
    29  0000                     _TRISAbits	set	3986
    30  0000                     _TRISB	set	3987
    31                           
    32                           	psect	smallconst
    33  000600                     __psmallconst:
    34                           	opt stack 0
    35  000600  00                 	db	0
    36  000601                     __stringdata:
    37                           	opt stack 0
    38  000601                     STR_1:
    39  000601  4D                 	db	77	;'M'
    40  000602  69                 	db	105	;'i'
    41  000603  63                 	db	99	;'c'
    42  000604  72                 	db	114	;'r'
    43  000605  6F                 	db	111	;'o'
    44  000606  65                 	db	101	;'e'
    45  000607  6D                 	db	109	;'m'
    46  000608  62                 	db	98	;'b'
    47  000609  65                 	db	101	;'e'
    48  00060A  64                 	db	100	;'d'
    49  00060B  64                 	db	100	;'d'
    50  00060C  65                 	db	101	;'e'
    51  00060D  64                 	db	100	;'d'
    52  00060E  00                 	db	0
    53  00060F                     STR_2:
    54  00060F  50                 	db	80	;'P'
    55  000610  49                 	db	73	;'I'
    56  000611  43                 	db	67	;'C'
    57  000612  2D                 	db	45
    58  000613  31                 	db	49	;'1'
    59  000614  38                 	db	56	;'8'
    60  000615  46                 	db	70	;'F'
    61  000616  20                 	db	32
    62  000617  42                 	db	66	;'B'
    63  000618  6F                 	db	111	;'o'
    64  000619  61                 	db	97	;'a'
    65  00061A  72                 	db	114	;'r'
    66  00061B  64                 	db	100	;'d'
    67  00061C  00                 	db	0
    68  00061D                     __end_of__stringdata:
    69                           	opt stack 0
    70  00061D  00                 	db	0	; dummy byte at the end
    71  0000                     
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75  0006D6                     __pcinit:
    76                           	opt stack 0
    77  0006D6                     start_initialization:
    78                           	opt stack 0
    79  0006D6                     __initialization:
    80                           	opt stack 0
    81                           
    82                           ; Initialize objects allocated to COMRAM (4 bytes)
    83                           ; load TBLPTR registers with __pidataCOMRAM
    84  0006D6  0E54               	movlw	low __pidataCOMRAM
    85  0006D8  6EF6               	movwf	tblptrl,c
    86  0006DA  0E07               	movlw	high __pidataCOMRAM
    87  0006DC  6EF7               	movwf	tblptrh,c
    88  0006DE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    89  0006E0  6EF8               	movwf	tblptru,c
    90  0006E2  EE00  F008         	lfsr	0,__pdataCOMRAM
    91  0006E6  EE10 F004          	lfsr	1,4
    92  0006EA                     copy_data0:
    93  0006EA  0009               	tblrd		*+
    94  0006EC  CFF5 FFEE          	movff	tablat,postinc0
    95  0006F0  50E5               	movf	postdec1,w,c
    96  0006F2  50E1               	movf	fsr1l,w,c
    97  0006F4  E1FA               	bnz	copy_data0
    98  0006F6                     end_of_initialization:
    99                           	opt stack 0
   100  0006F6                     __end_of__initialization:
   101                           	opt stack 0
   102  0006F6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   103  0006F8  6EF8               	movwf	tblptru,c
   104  0006FA  0E06               	movlw	high __Lsmallconst
   105  0006FC  6EF7               	movwf	tblptrh,c
   106  0006FE  0100               	movlb	0
   107  000700  EF0F  F003         	goto	_main	;jump to C main() function
   108                           tblptru	equ	0xFF8
   109                           tblptrh	equ	0xFF7
   110                           tblptrl	equ	0xFF6
   111                           tablat	equ	0xFF5
   112                           postinc0	equ	0xFEE
   113                           postdec1	equ	0xFE5
   114                           fsr1l	equ	0xFE1
   115                           
   116                           	psect	dataCOMRAM
   117  000008                     __pdataCOMRAM:
   118                           	opt stack 0
   119  000008                     _String1:
   120                           	opt stack 0
   121  000008                     	ds	2
   122  00000A                     _String2:
   123                           	opt stack 0
   124  00000A                     	ds	2
   125                           tblptru	equ	0xFF8
   126                           tblptrh	equ	0xFF7
   127                           tblptrl	equ	0xFF6
   128                           tablat	equ	0xFF5
   129                           postinc0	equ	0xFEE
   130                           postdec1	equ	0xFE5
   131                           fsr1l	equ	0xFE1
   132                           
   133                           	psect	cstackCOMRAM
   134  000001                     __pcstackCOMRAM:
   135                           	opt stack 0
   136  000001                     lcd_delay@time:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x0
   140  000001                     	ds	2
   141  000003                     lcd_delay@i:
   142                           	opt stack 0
   143                           
   144                           ; 2 bytes @ 0x2
   145  000003                     	ds	2
   146  000005                     lcd_delay@j:
   147                           	opt stack 0
   148                           
   149                           ; 2 bytes @ 0x4
   150  000005                     	ds	2
   151  000007                     SendInstruction@command:
   152                           	opt stack 0
   153  000007                     SendData@lcddata:
   154                           	opt stack 0
   155                           
   156                           ; 1 bytes @ 0x6
   157  000007                     	ds	1
   158  000008                     tblptru	equ	0xFF8
   159                           tblptrh	equ	0xFF7
   160                           tblptrl	equ	0xFF6
   161                           tablat	equ	0xFF5
   162                           postinc0	equ	0xFEE
   163                           postdec1	equ	0xFE5
   164                           fsr1l	equ	0xFE1
   165                           
   166                           ; 0 bytes @ 0x7
   167 ;;
   168 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   169 ;;
   170 ;; *************** function _main *****************
   171 ;; Defined at:
   172 ;;		line 58 in file "newmain.c"
   173 ;; Parameters:    Size  Location     Type
   174 ;;		None
   175 ;; Auto vars:     Size  Location     Type
   176 ;;		None
   177 ;; Return value:  Size  Location     Type
   178 ;;		None               void
   179 ;; Registers used:
   180 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   181 ;; Tracked objects:
   182 ;;		On entry : 0/0
   183 ;;		On exit  : 0/0
   184 ;;		Unchanged: 0/0
   185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   186 ;;      Params:         0       0       0       0       0       0       0
   187 ;;      Locals:         0       0       0       0       0       0       0
   188 ;;      Temps:          0       0       0       0       0       0       0
   189 ;;      Totals:         0       0       0       0       0       0       0
   190 ;;Total ram usage:        0 bytes
   191 ;; Hardware stack levels required when called:    2
   192 ;; This function calls:
   193 ;;		_SendData
   194 ;;		_SendInstruction
   195 ;; This function is called by:
   196 ;;		Startup code after reset
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           	psect	text0
   201  00061E                     __ptext0:
   202                           	opt stack 0
   203  00061E                     _main:
   204                           	opt stack 29
   205                           
   206                           ;newmain.c: 60: ADCON1 = 0x0F;
   207                           
   208                           ;incstack = 0
   209  00061E  0E0F               	movlw	15
   210  000620  6EC1               	movwf	4033,c	;volatile
   211                           
   212                           ;newmain.c: 61: TRISB = 0x00;
   213  000622  0E00               	movlw	0
   214  000624  6E93               	movwf	3987,c	;volatile
   215                           
   216                           ;newmain.c: 62: TRISAbits.RA0 = 0;
   217  000626  9092               	bcf	3986,0,c	;volatile
   218                           
   219                           ;newmain.c: 63: TRISAbits.RA1 = 0;
   220  000628  9292               	bcf	3986,1,c	;volatile
   221                           
   222                           ;newmain.c: 65: SendInstruction(0x38);
   223  00062A  0E38               	movlw	56
   224  00062C  EC82  F003         	call	_SendInstruction
   225                           
   226                           ;newmain.c: 66: SendInstruction(0x06);
   227  000630  0E06               	movlw	6
   228  000632  EC82  F003         	call	_SendInstruction
   229                           
   230                           ;newmain.c: 67: SendInstruction(0x0C);
   231  000636  0E0C               	movlw	12
   232  000638  EC82  F003         	call	_SendInstruction
   233                           
   234                           ;newmain.c: 68: SendInstruction(0x01);
   235  00063C  0E01               	movlw	1
   236  00063E  EC82  F003         	call	_SendInstruction
   237                           
   238                           ;newmain.c: 69: SendInstruction(0x80);
   239  000642  0E80               	movlw	128
   240  000644  EC82  F003         	call	_SendInstruction
   241                           
   242                           ;newmain.c: 71: while(*String1)
   243  000648  D00A               	goto	l703
   244  00064A                     l699:
   245                           
   246                           ;newmain.c: 72: {
   247                           ;newmain.c: 73: SendData(*String1);
   248  00064A  C008  FFF6         	movff	_String1,tblptrl
   249  00064E  C009  FFF7         	movff	_String1+1,tblptrh
   250  000652  0008               	tblrd		*
   251  000654  50F5               	movf	tablat,w,c
   252  000656  EC96  F003         	call	_SendData
   253                           
   254                           ;newmain.c: 74: String1++;
   255  00065A  4A08               	infsnz	_String1,f,c
   256  00065C  2A09               	incf	_String1+1,f,c
   257  00065E                     l703:
   258  00065E  C008  FFF6         	movff	_String1,tblptrl
   259  000662  C009  FFF7         	movff	_String1+1,tblptrh
   260  000666  0008               	tblrd		*
   261  000668  50F5               	movf	tablat,w,c
   262  00066A  0900               	iorlw	0
   263  00066C  A4D8               	btfss	status,2,c
   264  00066E  D7ED               	goto	l699
   265                           
   266                           ;newmain.c: 75: }
   267                           ;newmain.c: 77: SendInstruction(0xC0);
   268  000670  0EC0               	movlw	192
   269  000672  EC82  F003         	call	_SendInstruction
   270                           
   271                           ;newmain.c: 78: while(*String2)
   272  000676  D00A               	goto	l711
   273  000678                     l707:
   274                           
   275                           ;newmain.c: 79: {
   276                           ;newmain.c: 80: SendData(*String2);
   277  000678  C00A  FFF6         	movff	_String2,tblptrl
   278  00067C  C00B  FFF7         	movff	_String2+1,tblptrh
   279  000680  0008               	tblrd		*
   280  000682  50F5               	movf	tablat,w,c
   281  000684  EC96  F003         	call	_SendData
   282                           
   283                           ;newmain.c: 81: String2++;
   284  000688  4A0A               	infsnz	_String2,f,c
   285  00068A  2A0B               	incf	_String2+1,f,c
   286  00068C                     l711:
   287  00068C  C00A  FFF6         	movff	_String2,tblptrl
   288  000690  C00B  FFF7         	movff	_String2+1,tblptrh
   289  000694  0008               	tblrd		*
   290  000696  50F5               	movf	tablat,w,c
   291  000698  0900               	iorlw	0
   292  00069A  A4D8               	btfss	status,2,c
   293  00069C  D7ED               	goto	l707
   294  00069E                     l40:
   295  00069E  D7FF               	goto	l40
   296  0006A0                     __end_of_main:
   297                           	opt stack 0
   298                           tblptru	equ	0xFF8
   299                           tblptrh	equ	0xFF7
   300                           tblptrl	equ	0xFF6
   301                           tablat	equ	0xFF5
   302                           postinc0	equ	0xFEE
   303                           postdec1	equ	0xFE5
   304                           fsr1l	equ	0xFE1
   305                           status	equ	0xFD8
   306                           
   307 ;; *************** function _SendInstruction *****************
   308 ;; Defined at:
   309 ;;		line 19 in file "newmain.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;  command         1    wreg     unsigned char 
   312 ;; Auto vars:     Size  Location     Type
   313 ;;  command         1    6[COMRAM] unsigned char 
   314 ;; Return value:  Size  Location     Type
   315 ;;		None               void
   316 ;; Registers used:
   317 ;;		wreg, status,2, status,0, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : 0/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   323 ;;      Params:         0       0       0       0       0       0       0
   324 ;;      Locals:         1       0       0       0       0       0       0
   325 ;;      Temps:          0       0       0       0       0       0       0
   326 ;;      Totals:         1       0       0       0       0       0       0
   327 ;;Total ram usage:        1 bytes
   328 ;; Hardware stack levels used:    1
   329 ;; Hardware stack levels required when called:    1
   330 ;; This function calls:
   331 ;;		_lcd_delay
   332 ;; This function is called by:
   333 ;;		_main
   334 ;;		_InitLCD
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           	psect	text1
   339  000704                     __ptext1:
   340                           	opt stack 0
   341  000704                     _SendInstruction:
   342                           	opt stack 29
   343                           
   344                           ;incstack = 0
   345                           ;SendInstruction@command stored from wreg
   346  000704  CFE8 F007          	movff	wreg,SendInstruction@command
   347                           
   348                           ;newmain.c: 21: LATAbits.LA0 = 0;
   349  000708  9089               	bcf	3977,0,c	;volatile
   350                           
   351                           ;newmain.c: 22: LATB = command;
   352  00070A  C007  FF8A         	movff	SendInstruction@command,3978	;volatile
   353                           
   354                           ;newmain.c: 23: LATAbits.LA1 = 1;
   355  00070E  8289               	bsf	3977,1,c	;volatile
   356                           
   357                           ;newmain.c: 24: lcd_delay(10);
   358  000710  0E00               	movlw	0
   359  000712  6E02               	movwf	lcd_delay@time+1,c
   360  000714  0E0A               	movlw	10
   361  000716  6E01               	movwf	lcd_delay@time,c
   362  000718  EC50  F003         	call	_lcd_delay	;wreg free
   363                           
   364                           ;newmain.c: 25: LATAbits.LA1 = 0;
   365  00071C  9289               	bcf	3977,1,c	;volatile
   366                           
   367                           ;newmain.c: 26: lcd_delay(10);
   368  00071E  0E00               	movlw	0
   369  000720  6E02               	movwf	lcd_delay@time+1,c
   370  000722  0E0A               	movlw	10
   371  000724  6E01               	movwf	lcd_delay@time,c
   372  000726  EC50  F003         	call	_lcd_delay	;wreg free
   373  00072A  0012               	return	
   374  00072C                     __end_of_SendInstruction:
   375                           	opt stack 0
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           status	equ	0xFD8
   385                           
   386 ;; *************** function _SendData *****************
   387 ;; Defined at:
   388 ;;		line 29 in file "newmain.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;  lcddata         1    wreg     unsigned char 
   391 ;; Auto vars:     Size  Location     Type
   392 ;;  lcddata         1    6[COMRAM] unsigned char 
   393 ;; Return value:  Size  Location     Type
   394 ;;		None               void
   395 ;; Registers used:
   396 ;;		wreg, status,2, status,0, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   402 ;;      Params:         0       0       0       0       0       0       0
   403 ;;      Locals:         1       0       0       0       0       0       0
   404 ;;      Temps:          0       0       0       0       0       0       0
   405 ;;      Totals:         1       0       0       0       0       0       0
   406 ;;Total ram usage:        1 bytes
   407 ;; Hardware stack levels used:    1
   408 ;; Hardware stack levels required when called:    1
   409 ;; This function calls:
   410 ;;		_lcd_delay
   411 ;; This function is called by:
   412 ;;		_main
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           	psect	text2
   417  00072C                     __ptext2:
   418                           	opt stack 0
   419  00072C                     _SendData:
   420                           	opt stack 29
   421                           
   422                           ;incstack = 0
   423                           ;SendData@lcddata stored from wreg
   424  00072C  CFE8 F007          	movff	wreg,SendData@lcddata
   425                           
   426                           ;newmain.c: 31: LATAbits.LA0 = 1;
   427  000730  8089               	bsf	3977,0,c	;volatile
   428                           
   429                           ;newmain.c: 32: LATB = lcddata;
   430  000732  C007  FF8A         	movff	SendData@lcddata,3978	;volatile
   431                           
   432                           ;newmain.c: 33: LATAbits.LA1 = 1;
   433  000736  8289               	bsf	3977,1,c	;volatile
   434                           
   435                           ;newmain.c: 34: lcd_delay(10);
   436  000738  0E00               	movlw	0
   437  00073A  6E02               	movwf	lcd_delay@time+1,c
   438  00073C  0E0A               	movlw	10
   439  00073E  6E01               	movwf	lcd_delay@time,c
   440  000740  EC50  F003         	call	_lcd_delay	;wreg free
   441                           
   442                           ;newmain.c: 35: LATAbits.LA1 = 0;
   443  000744  9289               	bcf	3977,1,c	;volatile
   444                           
   445                           ;newmain.c: 36: lcd_delay(10);
   446  000746  0E00               	movlw	0
   447  000748  6E02               	movwf	lcd_delay@time+1,c
   448  00074A  0E0A               	movlw	10
   449  00074C  6E01               	movwf	lcd_delay@time,c
   450  00074E  EC50  F003         	call	_lcd_delay	;wreg free
   451  000752  0012               	return	
   452  000754                     __end_of_SendData:
   453                           	opt stack 0
   454                           tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           postdec1	equ	0xFE5
   461                           fsr1l	equ	0xFE1
   462                           status	equ	0xFD8
   463                           
   464 ;; *************** function _lcd_delay *****************
   465 ;; Defined at:
   466 ;;		line 8 in file "newmain.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  time            2    0[COMRAM] unsigned int 
   469 ;; Auto vars:     Size  Location     Type
   470 ;;  j               2    4[COMRAM] unsigned int 
   471 ;;  i               2    2[COMRAM] unsigned int 
   472 ;; Return value:  Size  Location     Type
   473 ;;		None               void
   474 ;; Registers used:
   475 ;;		wreg, status,2, status,0
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   481 ;;      Params:         2       0       0       0       0       0       0
   482 ;;      Locals:         4       0       0       0       0       0       0
   483 ;;      Temps:          0       0       0       0       0       0       0
   484 ;;      Totals:         6       0       0       0       0       0       0
   485 ;;Total ram usage:        6 bytes
   486 ;; Hardware stack levels used:    1
   487 ;; This function calls:
   488 ;;		Nothing
   489 ;; This function is called by:
   490 ;;		_SendInstruction
   491 ;;		_SendData
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text3
   496  0006A0                     __ptext3:
   497                           	opt stack 0
   498  0006A0                     _lcd_delay:
   499                           	opt stack 29
   500                           
   501                           ;newmain.c: 10: unsigned int i , j ;
   502                           ;newmain.c: 12: for(i = 0; i < time; i++)
   503                           
   504                           ;incstack = 0
   505  0006A0  0E00               	movlw	0
   506  0006A2  6E04               	movwf	lcd_delay@i+1,c
   507  0006A4  0E00               	movlw	0
   508  0006A6  6E03               	movwf	lcd_delay@i,c
   509  0006A8  D00F               	goto	l641
   510  0006AA                     l629:
   511                           
   512                           ;newmain.c: 13: {
   513                           ;newmain.c: 14: for(j=0;j<100;j++);
   514  0006AA  0E00               	movlw	0
   515  0006AC  6E06               	movwf	lcd_delay@j+1,c
   516  0006AE  0E00               	movlw	0
   517  0006B0  6E05               	movwf	lcd_delay@j,c
   518  0006B2  0E64               	movlw	100
   519  0006B4  5C05               	subwf	lcd_delay@j,w,c
   520  0006B6  0E00               	movlw	0
   521  0006B8  5806               	subwfb	lcd_delay@j+1,w,c
   522  0006BA  B0D8               	btfsc	status,0,c
   523  0006BC  D003               	goto	l639
   524  0006BE  4A05               	infsnz	lcd_delay@j,f,c
   525  0006C0  2A06               	incf	lcd_delay@j+1,f,c
   526  0006C2  D7F7               	goto	L1
   527  0006C4                     l639:
   528  0006C4  4A03               	infsnz	lcd_delay@i,f,c
   529  0006C6  2A04               	incf	lcd_delay@i+1,f,c
   530  0006C8                     l641:
   531  0006C8  5001               	movf	lcd_delay@time,w,c
   532  0006CA  5C03               	subwf	lcd_delay@i,w,c
   533  0006CC  5002               	movf	lcd_delay@time+1,w,c
   534  0006CE  5804               	subwfb	lcd_delay@i+1,w,c
   535  0006D0  B0D8               	btfsc	status,0,c
   536  0006D2  0012               	return	
   537  0006D4  D7EA               	goto	l629
   538  0006D6                     __end_of_lcd_delay:
   539                           	opt stack 0
   540                           tblptru	equ	0xFF8
   541                           tblptrh	equ	0xFF7
   542                           tblptrl	equ	0xFF6
   543                           tablat	equ	0xFF5
   544                           postinc0	equ	0xFEE
   545                           wreg	equ	0xFE8
   546                           postdec1	equ	0xFE5
   547                           fsr1l	equ	0xFE1
   548                           status	equ	0xFD8
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           postinc0	equ	0xFEE
   554                           wreg	equ	0xFE8
   555                           postdec1	equ	0xFE5
   556                           fsr1l	equ	0xFE1
   557                           status	equ	0xFD8
   558                           
   559                           	psect	rparam
   560  0000                     tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           postinc0	equ	0xFEE
   565                           wreg	equ	0xFE8
   566                           postdec1	equ	0xFE5
   567                           fsr1l	equ	0xFE1
   568                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      7      11
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    String2	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    String1	PTR unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_SendData
    _main->_SendInstruction
    _SendInstruction->_lcd_delay
    _SendData->_lcd_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     494
                           _SendData
                    _SendInstruction
 ---------------------------------------------------------------------------------
 (1) _SendInstruction                                      1     1      0     247
                                              6 COMRAM     1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (1) _SendData                                             1     1      0     247
                                              6 COMRAM     1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (2) _lcd_delay                                            6     4      2     232
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SendData
     _lcd_delay
   _SendInstruction
     _lcd_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      7       B       1        8.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      15        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed May 18 21:11:36 2022

                      l40 069E                       l711 068C                       l703 065E  
                     l641 06C8                       l707 0678                       l629 06AA  
                     l639 06C4                       l699 064A                       wreg 000FE8  
           lcd_delay@time 0001                      STR_1 0601                      STR_2 060F  
                    _LATB 000F8A                      _main 061E                      fsr1l 000FE1  
                    start 0000                     ?_main 0001                     _TRISB 000F93  
                   tablat 000FF5                     status 000FD8           __initialization 06D6  
            __end_of_main 06A0          __end_of_SendData 0754                    ??_main 0008  
           __activetblptr 000001                    _ADCON1 000FC1  __size_of_SendInstruction 0028  
            __pdataCOMRAM 0008              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                __accesstop 0080  
 __end_of__initialization 06F6            __pcstackCOMRAM 0001        __size_of_lcd_delay 0036  
               ?_SendData 0001         ??_SendInstruction 0007                ??_SendData 0007  
                 __Hparam 0000                   __Lparam 0000         __end_of_lcd_delay 06D6  
                 _String1 0008                   _String2 000A              __psmallconst 0600  
                 __pcinit 06D6                   __ramtop 0600                   __ptext0 061E  
                 __ptext1 0704                   __ptext2 072C                   __ptext3 06A0  
    end_of_initialization 06F6                   postdec1 000FE5                   postinc0 000FEE  
               _TRISAbits 000F92                lcd_delay@i 0003                lcd_delay@j 0005  
           __pidataCOMRAM 0754       start_initialization 06D6           _SendInstruction 0704  
       __size_of_SendData 0028       __end_of__stringdata 061D           SendData@lcddata 0007  
  SendInstruction@command 0007                 _lcd_delay 06A0               __smallconst 0600  
 __end_of_SendInstruction 072C                  _LATAbits 000F89                ?_lcd_delay 0001  
             __stringdata 0601                 copy_data0 06EA                  _SendData 072C  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0600  
        ?_SendInstruction 0001             __size_of_main 0082               ??_lcd_delay 0003  
